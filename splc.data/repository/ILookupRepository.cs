using splc.domain.Models;
using System.Collections.Generic;

namespace splc.data.repository
{
    public interface ILookupRepository
    {
        List<EventType> GetEventTypes();
        List<AudioVideoType> GetAudioVideoTypes();
        List<Prefix> GetPrefixes();
        List<Suffix> GetSuffixes();
        List<Gender> GetGenders();
        List<Race> GetRaces();
        List<LicenseType> GetLicenseTypes();
        List<EyeColor> GetEyeColors();
        List<HairColor> GetHairColors();
        List<HairPattern> GetHairPatterns();
        List<State> GetStates();
        List<MaritialStatus> GetMaritialStatuses();
        List<AddressType> GetAddressTypes();
        List<ApprovalStatus> GetApprovalStatuses();
        List<ActiveStatus> GetActiveStatuses();
        List<MovementClass> GetMovementClasses();
        List<ConfidentialityType> GetConfidentialityTypes(User user);
        List<ConfidentialityType> GetConfidentialityTypes();
        List<RemovalStatus> GetRemovalStatus();
        List<PrimaryStatus> GetPrimaryStatuses();
        List<RelationshipType> GetRelationshipTypes();
        List<OrganizationType> GetOrganizationTypes();
        List<ChapterType> GetChapterTypes();
        List<ContactInfoType> GetContactInfoTypes();
        List<WebIncidentType> GetWebIncidentTypes();
        List<EventDocumentationType> GetEventDocumentationTypes();
        List<VehicleMake> GetVehicleMakes();
        List<VehicleModel> GetVehicleModels();
        List<VehicleType> GetVehicleTypes();
        List<VehicleColor> GetVehicleColors();
        List<NewsSourceType> GetNewSourceType();
        List<MediaType> GetMediaTypes();
        List<ImageType> GetImageTypes();
        List<MimeType> GetMimeTypes();
        List<RenewalPermmisionType> RenewalPermissionTypes();
        List<NewsSource> GetNewsSources();
        List<ContactTopic> GetContactTopics();
        List<ContactType> GetContactTypes();
        List<CorrespondenceType> GetCorrespondenceTypes();
        List<LibraryCategoryType> GetLibraryCategoryTypes();
        List<PublishedType> GetPublishedTypes();
        List<TagType> GetTagTypes();
        List<UserType> GetUserTypes();
        List<WebsiteGroupType> GetWebsiteGroupTypes();
        List<Religion> GetReligions();

        int SaveEventType(EventType model);
        int SaveAudioVideoTypes(AudioVideoType model);
        int SavePrefixes(Prefix model);
        int SaveSuffixes(Suffix model);
        int SaveGenders(Gender model);
        int SaveRaces(Race model);
        int SaveLicenseTypes(LicenseType model);
        int SaveEyeColors(EyeColor model);
        int SaveHairColors(HairColor model);
        int SaveHairPatterns(HairPattern model);
        int SaveStates(State model);
        int SaveMaritialStatuses(MaritialStatus model);
        int SaveAddressTypes(AddressType model);
        int SaveApprovalStatuses(ApprovalStatus model);
        int SaveActiveStatuses(ActiveStatus model);
        int SaveMovementClasses(MovementClass model);
        int SaveConfidentialityTypes(ConfidentialityType model);
        int SaveRemovalStatus(RemovalStatus model);
        int SavePrimaryStatuses(PrimaryStatus model);
        int SaveRelationshipTypes(RelationshipType model);
        int SaveOrganizationTypes(OrganizationType model);
        int SaveChapterTypes(ChapterType model);
        int SaveContactInfoTypes(ContactInfoType model);
        int SaveWebIncidentTypes(WebIncidentType model);
        int SaveEventDocumentationTypes(EventDocumentationType model);
        int SaveVehicleMakes(VehicleMake model);
        int SaveVehicleModels(VehicleModel model);
        int SaveVehicleTypes(VehicleType model);
        int SaveVehicleColors(VehicleColor model);
        int SaveNewSourceType(NewsSourceType model);
        int SaveMediaTypes(MediaType model);
        int SaveImageTypes(ImageType model);
        int SaveMimeTypes(MimeType model);
        int SaveRenewalPermissionTypes(RenewalPermmisionType model);
        int SaveNewsSources(NewsSource model);
        int SaveContactTopics(ContactTopic model);
        int SaveContactTypes(ContactType model);
        int SaveCorrespondenceTypes(CorrespondenceType model);
        int SaveLibraryCategoryTypes(LibraryCategoryType model);
        int SavePublishedTypes(PublishedType model);
        int SaveTagTypes(TagType model);
        int SaveUserTypes(UserType model);
        int SaveWebsiteGroupTypes(WebsiteGroupType model);
        int SaveReligions(Religion model);
    }
}