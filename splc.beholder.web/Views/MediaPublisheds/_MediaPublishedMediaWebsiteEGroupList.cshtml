@model IEnumerable<MediaPublishedMediaWebsiteEGroupRel>
@{
    var viewItem = ViewBag.Controller == "MediaPublisheds" ? "Website EGroups" : "Published Items";
    var source = ViewBag.Controller == "MediaPublisheds" ? "MediaPublisheds" : "MediaWebsiteEGroups";
    var mediaWebsiteEGroupId =  ViewData["MediaWebsiteEGroupId"] == null ? -1 : (int)ViewData["MediaWebsiteEGroupId"];
    var mediaPublishedId = ViewData["MediaPublishedId"] == null ? -1 : (int) ViewData["MediaPublishedId"]; 
    var showMediaPublisheds = ViewBag.Controller == "MediaWebsiteEGroups";
}

<div class="panel panel-primary">
    <div class="panel panel-heading">@viewItem <span class="badge pull-right">@string.Format("{0}", Model.Count())</span></div>
    <div class="panel-body">
        <ul class="list-group">
            @if (!Model.Any())
            {
                <li class="list-group-item">
                    @string.Format("No Known {0} Relationships", viewItem)
                </li>
            }
            @foreach (var item in @Model)
            {
                <li class="list-group-item">
                    @if (showMediaPublisheds){
                        @Html.ActionLink(item.MediaPublished.Name, "Details", "MediaPublisheds", new { id = item.MediaPublished.Id }, null)<br/>
                        @Html.DisplayFor(model => item.MediaPublished.MovementClass.Name)
                    }
                    else{
                       @Html.ActionLink(item.MediaWebsiteEGroup.Name, "Details", "MediaWebsiteEGroups", new { id = item.MediaWebsiteEGroup.Id }, null)<br/>
                       @Html.DisplayFor(model => item.MediaWebsiteEGroup.MovementClass.Name)
                    }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditMediaPublishedMediaWebsiteEGroup", "MediaPublisheds", new { id = item.Id, source = ViewData["Controller"].ToString()})" 
                               class="btnEdit" 
                               data-title="Edit Relationship" 
                               data-refresh="true" 
                               data-target="#mediaPublishedMediaWebsiteEGroups"
                               data-action="@Url.Action("GetMediaPublishedMediaWebsiteEGroups", "MediaPublisheds", new { mediaPublishedId = @mediaPublishedId, mediaWebsiteEGroupId = @mediaWebsiteEGroupId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteMediaPublishedMediaWebsiteEGroup", "MediaPublisheds", new { id = item.Id})" 
                               class="btnDelete" 
                               data-title="Delete Relationship" 
                               data-refresh="true" 
                               data-target="#mediaPublishedMediaWebsiteEGroups"
                               data-action="@Url.Action("GetMediaPublishedMediaWebsiteEGroups", "MediaPublisheds", new { mediaPublishedId = @mediaPublishedId, mediaWebsiteEGroupId = @mediaWebsiteEGroupId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>

            }
        </ul>
    </div>
    <div class="panel-footer">
        <a href="@Url.Action("CreateMediaPublishedMediaWebsiteEGroup", "MediaPublisheds", new { mediaPublishedId = @mediaPublishedId, mediaWebsiteEGroupId = @mediaWebsiteEGroupId })" 
           class="btnNew" 
           data-title="New Relationship" 
           data-refresh="true" 
           data-target="#mediaPublishedMediaWebsiteEGroups"
           data-action="@Url.Action("GetMediaPublishedMediaWebsiteEGroups", "MediaPublisheds", new { mediaPublishedId = @mediaPublishedId, mediaWebsiteEGroupId = @mediaWebsiteEGroupId })"><span class="glyphicon glyphicon-plus"></span></a>
    </div>
</div>

