@model IEnumerable<splc.domain.Models.MediaPublishedSubscriptionRel>
@{
    var viewItem = ViewBag.Controller == "MediaPublisheds" ? "Subscriptions" : "Published";
    var source = ViewBag.Controller == "MediaPublisheds" ? "MediaPublisheds" : "Subscriptions";
    var subscriptionId = ViewData["SubscriptionId"] == null ? -1 : (int)ViewData["SubscriptionId"];
    var mediaPublishedId = ViewData["MediaPublishedId"] == null ? -1 : (int) ViewData["MediaPublishedId"];
    var showMediaPublisheds = ViewBag.Controller == "Subscriptions";
}

<div class="panel panel-primary">
    <div class="panel panel-heading">@viewItem <span class="badge pull-right">@string.Format("{0}", Model.Count())</span></div>
    <div class="panel-body">
        <ul class="list-group">
            @if (!Model.Any())
            {
                <li class="list-group-item">
                    @string.Format("No Known {0} Relationships", viewItem)
                </li>
            }
            @foreach (var item in @Model)
            {
                <li class="list-group-item">
                    @if (showMediaPublisheds){
                        @Html.ActionLink(item.MediaPublished.Name, "Details", "MediaPublisheds", new { id = item.MediaPublished.Id }, null)<br/>
                        @Html.DisplayFor(model => item.MediaPublished.MovementClass.Name)
                    }
                    else{
                        @Html.ActionLink(item.Subscription.PublicationName, "Details", "Subscriptions", new { id = item.Subscription.Id }, null)<br/>
                        @Html.DisplayFor(model => item.Subscription.SubscriptionRate)
                    }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditMediaPublishedSubscription", "MediaPublisheds", new { id = item.Id, source = @source })" 
                               class="btnEdit" 
                               data-title="Edit Relationship" 
                               data-refresh="true" 
                               data-target="#mediaPublishedSubscriptions"
                               data-action="@Url.Action("GetMediaPublishedSubscriptions", "MediaPublisheds", new { mediaPublishedId = @mediaPublishedId, subscriptionId = @subscriptionId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteMediaPublishedSubscription", "MediaPublisheds", new { id = item.Id})" 
                               class="btnDelete" 
                               data-title="Delete Relationship" 
                               data-refresh="true" 
                               data-target="#mediaPublishedSubscriptions"
                               data-action="@Url.Action("GetMediaPublishedSubscriptions", "MediaPublisheds", new { mediaPublishedId = @mediaPublishedId, subscriptionId = @subscriptionId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>

            }
        </ul>
    </div>
    <div class="panel-footer">
        <a href="@Url.Action("CreateMediaPublishedSubscription", "MediaPublisheds", new { mediaPublishedId = @mediaPublishedId, subscriptionId = @subscriptionId })" 
           class="btnNew" 
           data-title="New Relationship" 
           data-refresh="true" 
           data-target="#mediaPublishedSubscriptions"
           data-action="@Url.Action("GetMediaPublishedSubscriptions", "MediaPublisheds", new { mediaPublishedId = @mediaPublishedId, subscriptionId = @subscriptionId })"><span class="glyphicon glyphicon-plus"></span></a>
    </div>
</div>

