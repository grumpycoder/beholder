@model MediaPublished

@{
    ViewBag.Title = string.Format("Details - {0}", Model.Name == "Unspecified On Conversion" ? (Model.Summary).Substring(0, 20) : Model.Name);

    var page = Session["page"] ?? Request["page"];
    var pageSize = Session["pageSize"] ?? Request["pageSize"];
    var publishedname = Session["publishedname"] ?? Request["publishedname"];
    var location = Session["location"] ?? Request["location"];
    var datefrom = Session["datefrom"] ?? Request["datefrom"];
    var dateto = Session["dateto"] ?? Request["dateto"];
    var docsearch = Session["docsearch"] ?? Request["docsearch"];

    var publishedtypeid_string = "";
    if ((Session["publishedtypeid"] ?? Request["publishedtypeid"]) != null)
    {
        publishedtypeid_string = string.Join(",", (List<int>)(Session["publishedtypeid"] ?? Request["publishedtypeid"]));
    }

}
<style>
    .k-button.k-upload-button {
        display: none;
}

</style>
<h2 class="title-bar">@Model.Name</h2>
<div class="search-bar">
    <div class="row">
        <span>
            @Html.ActionLink("Return to List", "Index", new { page, pageSize, publishedname, location, datefrom, dateto, publishedtypeid_string, docsearch })
        </span>
        <span class="pull-right">
            @Html.ActionLink("Edit", "Edit", "MediaPublisheds", new { id = Model.Id }, new { @class = "btn btn-default" })
            @Html.ActionLink("Delete", "RemovePublished", "MediaPublisheds", new { id = Model.Id }, new { @class = "btn btn-default" })
        </span>
    </div>
</div>

<div class="row">


    <ul class="detail-list">
        <li>
            <div class="thumbnail">
                @if (Model.MediaPublishedMediaImageRels.Count > 0)
                {
                    <img src="@Url.Action("ShowPrimaryImage", "MediaPublisheds", new { Model.Id })" alt="org image" class="thumbnail-img" height="270" width="500" />
                }
                else
                {
                    <img src="~/Content/images/image_unavailable.jpg" alt="" height="270" width="500" />
                }
            </div>
        </li>
        <li>
            <div class="panel panel-primary">
                <div class="panel panel-heading">Details</div>
                <div class="panel-body">
                    <table class="table table-bordered">
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.ConfidentialityTypeId).ToString()</td>
                            <td>@Html.DisplayTextFor(_ => Model.ConfidentialityType.Name).ToString()</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.MovementClassId).ToString()</td>
                            <td>@(Model.MovementClass == null ? "None" : Model.MovementClass.Name)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.Summary).ToString()</td>
                            <td>@Model.Summary</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.DateReceived).ToString()</td>
                            <td>@String.Format("{0:d}", Model.DateReceived)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.DatePublished).ToString()</td>
                            <td>@String.Format("{0:d}", Model.DatePublished)</td>
                        </tr>
                    </table>
                </div>
            </div>
        </li>
        <li>
            <div class="panel panel-primary">
                <div class="panel panel-heading">Status</div>
                <div class="panel-body">
                    <table class="table table-bordered">
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.ModifiedUser).ToString()</td>
                            <td>@(Model.ModifiedUser == null ? "None" : Model.ModifiedUser.UserName)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.DateModified).ToString()</td>
                            <td>@String.Format("{0:d}", Model.DateModified)</td>
                        </tr>
                    </table>
                </div>
            </div>
        </li>
        <li>
            <div class="panel panel-primary">
                <div class="panel panel-heading">Miscellaneous</div>
                <div class="panel-body">
                    <table class="table table-bordered">
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.MediaTypeId).ToString()</td>
                            <td>@(Model.MediaType == null ? "None" : Model.MediaType.Name)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.PublishedTypeId).ToString()</td>
                            <td>@(Model.PublishedType == null ? "None" : Model.PublishedType.Name)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.LibraryCategoryTypeId).ToString()</td>
                            <td>@(Model.LibraryCategoryType == null ? "None" : Model.LibraryCategoryType.Name)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.Author).ToString()</td>
                            <td>@Html.DisplayTextFor(_ => Model.Author).ToString()</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.CatalogId).ToString()</td>
                            <td>@Html.DisplayTextFor(_ => Model.CatalogId).ToString()</td>
                        </tr>
                    </table>
                </div>
            </div>
        </li>
        <li>
            <div class="panel panel-primary">
                <div class="panel panel-heading">Renewal Information</div>
                <div class="panel-body">
                    <table class="table table-bordered">
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.RenewalPermmisionType).ToString()</td>
                            <td>@(Model.RenewalPermmisionType == null ? "None" : Model.RenewalPermmisionType.Name)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.DateRenewalPermission).ToString()</td>
                            <td>@String.Format("{0:d}", Model.DateRenewalPermission)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.RenewalPermission).ToString()</td>
                            <td>@(Model.RenewalPermission)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.NewsSourceId).ToString()</td>
                            <td>@(Model.NewsSourceId == null ? "Unknown" : Model.NewsSource.NewsSourceName)</td>
                        </tr>
                    </table>
                </div>
            </div>
        </li>
        <li>
            <div class="panel panel-primary">
                <div class="panel panel-heading">Location</div>
                <div class="panel-body">
                    <table class="table table-bordered">
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.City).ToString()</td>
                            <td>@Model.City</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.County).ToString()</td>
                            <td>@Model.County</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(_ => Model.StateId).ToString()</td>
                            <td>@(Model.State == null ? "None" : Model.State.StateName)</td>
                        </tr>
                    </table>
                </div>
            </div>
        </li>
        <li>

            <div class="panel panel-primary">
                <div class="panel panel-heading">Documents</div>
                <div class="panel-body">
                    <div id="documentList">
                        @Html.Action("GetContextList", new { MediaPublishedId = Model.Id })
                    </div>

                </div>
                <div class="panel-footer">
                    @(Html.Kendo().Upload().Name("attachments")
                            .Async(a => a.Save("SaveAttachments", "MediaPublisheds", new { mediaPublishedId = @Model.Id }))
                            .ShowFileList(false).Events(e => e
                                                    .Complete(@<text> function(e){LoadView("#documentList","@Url.Action("GetContextList", "MediaPublisheds", new { MediaPublishedId = Model.Id })")}</text>)
                                                    .Error("onError"))
                                                    .Messages(m => m.HeaderStatusUploaded("").StatusUploaded("").Select("Choose")))
                </div>
            </div>
        </li>
    </ul>

    <h2 class="seperator-bar panel-primary">Relationships</h2>

    <ul class="detail-list">
        <li>
            <div id="personMediaPublisheds">
                @Html.Partial("../Persons/_PersonMediaPublishedList", Model.PersonMediaPublishedRels)
            </div>
        </li>
        <li>
            <div id="chapterMediaPublisheds">
                @Html.Partial("../Chapters/_ChapterMediaPublishedList", Model.ChapterMediaPublishedRels)
            </div>
        </li>
        <li>
            <div id="organizationMediaPublisheds">
                @Html.Partial("../Organizations/_OrganizationMediaPublishedList", Model.OrganizationMediaPublishedRels)
            </div>
        </li>
        @*<li>
               //TODO: Not Implemented
                <div id="contactMediaPublisheds">
                    @Html.Partial("../Contacts/_ContactMediaPublishedList", Model.ContactMediaPublishedRels)
                </div>
            </li> *@
        <li>
            <div id="mediaPublishedEvents">
                @Html.Partial("../MediaPublisheds/_MediaPublishedEventList", Model.MediaPublishedEventRels)
            </div>
        </li>
        <li>
            <div id="mediaPublishedMediaAudioVideos">
                @Html.Partial("../MediaPublisheds/_MediaPublishedMediaAudioVideoList", Model.MediaPublishedMediaAudioVideoRels)
            </div>
        </li>
        <li>
            <div id="mediaPublishedMediaWebsiteEGroups">
                @Html.Partial("../MediaPublisheds/_MediaPublishedMediaWebsiteEGroupList", Model.MediaPublishedMediaWebsiteEGroupRels)
            </div>
        </li>
        <li>
            <div id="mediaPublishedVehicles">
                @Html.Partial("../MediaPublisheds/_MediaPublishedVehicleList", Model.MediaPublishedVehicleRels)
            </div>
        </li>
        <li>
            <div id="mediaPublishedMediaCorrespondences">
                @Html.Partial("../MediaPublisheds/_MediaPublishedMediaCorrespondenceList", Model.MediaPublishedMediaCorrespondenceRels)
            </div>
        </li>
        <li>
            <div id="mediaPublishedMediaPublisheds">
                @Html.Partial("../MediaPublisheds/_MediaPublishedMediaPublishedList", Model)
            </div>
        </li>
        <li>
            <div id="mediaPublishedSubscriptions">
                @Html.Partial("../MediaPublisheds/_MediaPublishedSubscriptionList", Model.MediaPublishedSubscriptionRels)
            </div>
        </li>
    </ul>

</div>

<div class="row">
    <div id="mediaPublishedMediaImages">
        @Html.Partial("../MediaPublisheds/_MediaPublishedMediaImageList", Model.MediaPublishedMediaImageRels)
    </div>
</div>

<div class="row">
    <div id="mediaPublishedComments">
        @Html.Partial("../Comments/_MediaPublishedCommentList", Model.MediaPublishedComments.Where(x => x.DateDeleted == null).OrderByDescending(x => x.DateModified), new ViewDataDictionary { { "MediaPublishedId", Model.Id } })
    </div>
</div>


<script>
    function complete() {
        var protocol = window.location.protocol;
        LoadView('#documentList', protocol.concat('//', window.location.host, "/Beholder/MediaPublisheds/GetContextList/123900"));
    }

    //$('#attachments').kendoUpload({
    //    localization: {
    //        statusUploaded: "",
    //        headerStatusUploaded: ""
    //    }
    //});
    function onError(e) {
        toastr.error(e.XMLHttpRequest.responseText);
    };

    function onAdditionalDataPersonList() {
        return {
            term: $("#PersonId").data("kendoComboBox").text()
        };
    }

    function databoundPersonList() {
        if ($("#PersonId").data("kendoComboBox").value() === '-1') {
            $("#PersonId").data("kendoComboBox").text('');
        }
    };

    function onAdditionalChapterList() {
        return {
            term: $("#ChapterId").data("kendoComboBox").text()
        };
    }

    function databoundChapterList() {
        if ($("#ChapterId").data("kendoComboBox").value() === '-1') {
            $("#ChapterId").data("kendoComboBox").text('');
        }
    };

    function onAdditionalDataWebsiteList() {
        return {
            term: $("#MediaWebsiteEGroupId").data("kendoComboBox").text()
        };
    };

    function databoundWebsiteList() {
        if ($("#MediaWebsiteEGroupId").data("kendoComboBox").value() === '-1') {
            $("#MediaWebsiteEGroupId").data("kendoComboBox").text('');
        }
    };

</script>