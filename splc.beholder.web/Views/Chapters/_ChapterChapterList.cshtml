@model Chapter
@{
    const string viewItem = "Chapters";
    var chapterId = (int)ViewData["ChapterId"];
    var count = Model.ChapterChapterRels.Count() + Model.ChapterChapterRels2.Count(); 
}

<div class="panel panel-primary">
    <div class="panel panel-heading">@viewItem <span class="badge pull-right">@string.Format("{0}", @count)</span></div>
    <div class="panel-body">
        <ul class="list-group">
            @if (@count == 0)
            {
                <li class="list-group-item">
                    No Known Chapter Relationships
                </li>
            }
            @foreach (var item in @Model.ChapterChapterRels)
            {
                <li class="list-group-item">
                    @if (@chapterId == item.Chapter2Id)
                    {
                        @Html.ActionLink(item.Chapter.ChapterName, "Details", "Chapters", new { id = item.ChapterId}, null)<br/>
                        @Html.DisplayFor(model => item.Chapter.MovementClass.Name)
                    }
                    else
                    {
                        @Html.ActionLink(item.Chapter2.ChapterName, "Details", "Chapters", new { id = item.Chapter2Id }, null)<br/>
                        @Html.DisplayFor(model => item.Chapter2.MovementClass.Name)
                    }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditChapterChapter", "Chapters", new { id = item.Id})" 
                               class="btnEdit" 
                               data-title="Edit Relationship" 
                               data-refresh="true" 
                               data-target="#chapterChapters"
                               data-action="@Url.Action("GetChapterChapters", "Chapters", new { chapterId = @chapterId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteChapterChapter", "Chapters", new { id = item.Id})" 
                               class="btnDelete" 
                               data-title="Delete Relationship" 
                               data-refresh="true" 
                               data-target="#chapterChapters"
                               data-action="@Url.Action("GetChapterChapters", "Chapters", new { chapterId = @chapterId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>
            }

            @foreach (var item in @Model.ChapterChapterRels2)
            {
                <li class="list-group-item">
                   @if (@chapterId == item.Chapter2Id)
                    {
                        @Html.ActionLink(item.Chapter.ChapterName, "Details", "Chapters", new { id = item.ChapterId}, null)<br/>
                        @Html.DisplayFor(model => item.Chapter.MovementClass.Name)
                    }
                    else
                    {
                        @Html.ActionLink(item.Chapter2.ChapterName, "Details", "Chapters", new { id = item.Chapter2Id }, null)<br/>
                        @Html.DisplayFor(model => item.Chapter2.MovementClass.Name)
                    }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditChapterChapter", "Chapters", new { id = item.Id})" 
                               class="btnEdit" 
                               data-title="Edit Relationship" 
                               data-refresh="true" 
                               data-target="#chapterChapters"
                               data-action="@Url.Action("GetChapterChapters", "Chapters", new { chapterId = @chapterId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteChapterChapter", "Chapters", new { id = item.Id})" 
                               class="btnDelete" 
                               data-title="Delete Relationship" 
                               data-refresh="true" 
                               data-target="#chapterChapters"
                               data-action="@Url.Action("GetChapterChapters", "Chapters", new { chapterId = @chapterId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>

            }
        </ul>
    </div>
    <div class="panel-footer">
        <a href="@Url.Action("CreateChapterChapter", "Chapters", new { @chapterId })"
           class="btnNew"
           data-title="New Relationship"
           data-refresh="true"
           data-target="#chapterChapters"
           data-action="@Url.Action("GetChapterChapters", "Chapters", new { chapterId = @chapterId })"><span class="glyphicon glyphicon-plus"></span></a>
    </div>
</div>

