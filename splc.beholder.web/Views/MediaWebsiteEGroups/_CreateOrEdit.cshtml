@model MediaWebsiteEGroup
<div class="row">

    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.CreatedUserId)
    @Html.HiddenFor(m => m.DateCreated)
    @*@Html.HiddenFor(m => m.MediaWebsiteEGroupContext.Id)*@
    @Html.HiddenFor(m => m.MediaWebsiteEGroupContextId)
    @*@Html.HiddenFor(m => m.MediaWebsiteEGroupContext.MimeTypeId)
    @Html.HiddenFor(m => m.MediaWebsiteEGroupContext.MimeType.Name)
    @Html.HiddenFor(m => m.MediaWebsiteEGroupContext.ContextText)*@

    <fieldset class="col-sm-6">

        <legend>Specifics</legend>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.Name)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.Name)
                <span class="help-block">@Html.ValidationMessageFor(model => model.Name)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.ConfidentialityTypeId)
            <div class="col-sm-8">
                @Html.DropDownListFor(model => model.ConfidentialityTypeId, ((IEnumerable<ConfidentialityType>)ViewBag.PossibleConfidentialityTypes).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.ConfidentialityTypeId)
                }), "Choose...", new { @class = "form-control" })
                <span class="help-block">@Html.ValidationMessageFor(model => model.ConfidentialityTypeId)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.MovementClassId)
            <div class="col-sm-8">
                @Html.DropDownListFor(model => model.MovementClassId, ((IEnumerable<MovementClass>)ViewBag.PossibleMovementClasses).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.MovementClassId)
                }), "Choose...", new { @class = "form-control" })
                <span class="help-block">@Html.ValidationMessageFor(model => model.MovementClassId)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.Summary)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.Summary)
                <span class="help-block">@Html.ValidationMessageFor(model => model.Summary)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.DatePublished)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.DatePublished)
                <span class="help-block">@Html.ValidationMessageFor(model => model.DatePublished)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.DateDiscovered)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.DateDiscovered)
                <span class="help-block">@Html.ValidationMessageFor(model => model.DateDiscovered)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.DateOffline)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.DateOffline)
                <span class="help-block">@Html.ValidationMessageFor(model => model.DateOffline)</span>
            </div>
        </div>

    </fieldset>

    <fieldset class="col-sm-6">

        <legend>Location</legend>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.URL)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.URL)
                <span class="help-block">@Html.ValidationMessageFor(model => model.URL)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.IPAddress)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.IPAddress)
                <span class="help-block">@Html.ValidationMessageFor(model => model.IPAddress)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.WhoIsInfo)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.WhoIsInfo)
                <span class="help-block">@Html.ValidationMessageFor(model => model.WhoIsInfo)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.City)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.City)
                <span class="help-block">@Html.ValidationMessageFor(model => model.City)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.County)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.County)
                <span class="help-block">@Html.ValidationMessageFor(model => model.County)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.StateId)
            <div class="col-sm-8">
                @Html.DropDownListFor(model => model.StateId, ((IEnumerable<State>)ViewBag.PossibleStates).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.StateName),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.StateId)
                }), "Choose...", new { @class = "form-control" })
                <span class="help-block">@Html.ValidationMessageFor(model => model.StateId)</span>
            </div>
        </div>

    </fieldset>

    <fieldset class="col-sm-6">

        <legend>Miscellaneous</legend>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.MediaTypeId)
            <div class="col-sm-8">
                @Html.DropDownListFor(model => model.MediaTypeId, ((IEnumerable<MediaType>)ViewBag.PossibleMediaTypes).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.MediaTypeId)
                }), "Choose...", new { @class = "form-control" })
                <span class="help-block">@Html.ValidationMessageFor(model => model.MediaTypeId)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.WebsiteEGroupTypeId)
            <div class="col-sm-8">
                @Html.DropDownListFor(model => model.WebsiteEGroupTypeId, ((IEnumerable<WebsiteGroupType>)ViewBag.PossibleWebsiteGroupTypes).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.WebsiteEGroupTypeId)
                }), "Choose...", new { @class = "form-control" })
                <span class="help-block">@Html.ValidationMessageFor(model => model.WebsiteEGroupTypeId)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.NewsSourceId)
            <div class="col-sm-8">
                @Html.DropDownListFor(model => model.NewsSourceId, ((IEnumerable<NewsSource>)ViewBag.PossibleNewsSources).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.NewsSourceName),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.NewsSourceId)
                }), "Choose...", new { @class = "form-control" })
                <span class="help-block">@Html.ValidationMessageFor(model => model.NewsSourceId)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.ActiveYear)
            <div class="col-sm-8">
                @Html.TextBoxFor(model => model.ActiveYear)
                <span class="help-block">@Html.ValidationMessageFor(model => model.ActiveYear)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.ActiveStatusId)
            <div class="col-sm-8">
                @Html.DropDownListFor(model => model.ActiveStatusId, ((IEnumerable<ActiveStatus>)ViewBag.PossibleActiveStatus).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.ActiveStatusId)
                }), "Choose...", new { @class = "form-control" })
                <span class="help-block">@Html.ValidationMessageFor(model => model.ActiveStatusId)</span>
            </div>

        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.ApprovalStatusId)
            <div class="col-sm-8">
                @Html.DropDownListFor(model => model.ApprovalStatusId, ((IEnumerable<ApprovalStatus>)ViewBag.PossibleApprovalStatus).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.ApprovalStatusId)
                }), "Choose...", new { @class = "form-control" })
                <span class="help-block">@Html.ValidationMessageFor(model => model.ApprovalStatusId)</span>
            </div>
        </div>
        <div class="form-group">
            @Html.BootstrapLabelFor(model => model.IsReported)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.IsReported)
                <span class="help-block">@Html.ValidationMessageFor(model => model.IsReported)</span>
            </div>
        </div>

    </fieldset>

    
    
    
    <fieldset class="col-sm-6">

        <legend>Documents</legend>

        <div class="form-group">
            <div id="documentList">
                @Html.Action("GetContextList", new { websiteEgroupId = Model.Id })
            </div>
            <div class="col-sm-12">
                <input type="radio" name="uploadfile" value="Yes" class="uploadfile" checked="checked" />&nbsp;Upload File
                <input type="radio" name="uploadfile" value="No" class="uploadfile" />&nbsp;Paste Text
            </div>
        </div>

        <div class="form-group">
            <div id="uploadFile">
                @if (@Model.Id != 0)
                {
                    @Html.Kendo().Upload().Name("attachments").Async(a => a.Save("SaveAttachments", "MediaWebsiteEGroups", new { websiteEgroupId = @Model.Id })).ShowFileList(false).Events(e => e.Complete(@<text> function(e){LoadView("#documentList","@Url.Action("GetContextList", "MediaWebsiteEGroups", new { websiteEgroupId = Model.Id })")}</text>)).Messages(m => m.HeaderStatusUploaded("").StatusUploaded("").Select("Choose"))
                }
                else
                {
                    <input name="attachments" id="attachments" type="file" />
                }
            </div>
            <div id="createFile" hidden="hidden">
                <div class="col-sm-12">@Html.TextArea("fileContent", new { rows = 20, cols = 500, @placeholder = "Paste Content Here" })</div>
                <div class="col-sm-12">
                    @Html.TextBox("filename", null, new { @placeholder = "File Name" })
                    @if (Model.Id == 0)
                    {
                        <div class="alert alert-warning">Content will be recorded when record saved.</div>
                    }
                    else
                    {
                 
                        <a href="@Url.Action("SaveTextAsContent", "MediaWebsiteEGroups")" id="btnSaveContext"
                           class="btn btn-warning"
                           data-target="#documentList"
                           data-modelid = "@Model.Id"
                           data-action="@Url.Action("GetContextList", "MediaWebsiteEGroups", new { websiteEgroupId = Model.Id })">Save as file</a>
                    }
                </div>
            </div>
        </div>

    </fieldset>


</div>

<script>
    $(function () {
        $('#fileContent').change(function (e) {
            var $filename = $('#filename');
            if ($filename.val().length == 0)
                $filename.val($(this).val().replace(/\s/g, '').substring(0, 15));
        });

        $('#btnSaveContext').on('click', function (e) {
            e.preventDefault();
            var $content = $('#fileContent');
            var $filename = $('#filename');
            var modelid = $(this).data('modelid');
            var $action = $(this).data('action');
            var $target = $(this).data('target');

            var url = this.href;
            var $data = {
                websiteEgroupId: modelid,
                filename: $filename.val(),
                content: $content.val()
            }

            $.post(url, $data,
                function () {
                    toastr.success('new record created');
                    LoadView($target, $action);
                    $filename.val('');
                    $content.val('');
                });

        });

        $(function () {
            $('#attachments').kendoUpload();
        });

    });
</script>


