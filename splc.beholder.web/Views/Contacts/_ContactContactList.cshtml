@model Contact
@{
    const string viewItem = "Contacts";
    var contactId = (int) ViewData["ContactId"]; 
    var count = Model.ContactContactRels.Count() + Model.ContactContactRels2.Count(); 
}

<div class="panel panel-primary">
    <div class="panel panel-heading">@viewItem <span class="badge pull-right">@string.Format("{0}", @count)</span></div>
    <div class="panel-body">
        <ul class="list-group">
            @if (@count == 0)
            {
                <li class="list-group-item">
                    No Known Person Relationships
                </li>
            }
            @foreach (var item in @Model.ContactContactRels)
            {
                <li class="list-group-item">

                    @if (@contactId == item.Contact2Id)
                    {
                        @Html.ActionLink(string.Format("{0} {1} {2} {3}", item.Contact.CommonPerson.Prefix == null ? "" : item.Contact.CommonPerson.Prefix.Name, item.Contact.CommonPerson.FName, item.Contact.CommonPerson.MName, item.Contact.CommonPerson.LName), "Details", "Contacts", new { id = item.Contact.Id }, null)<br/>
                        @Html.DisplayFor(model => item.Contact.ContactType.Name)
                    }
                    else
                    {
                        @Html.ActionLink(string.Format("{0} {1} {2} {3}", item.Contact2.CommonPerson.Prefix == null ? "" : item.Contact2.CommonPerson.Prefix.Name, item.Contact2.CommonPerson.FName, item.Contact2.CommonPerson.MName, item.Contact2.CommonPerson.LName), "Details", "Contacts", new { id = item.Contact2.Id }, null)<br/>
                        @Html.DisplayFor(model => item.Contact2.ContactType.Name)
                    }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditContactContact", "Contacts", new { id = item.Id})"
                               class="btnEdit"
                               data-title="Edit Relationship" 
                               data-refresh="true" 
                               data-target="#contactContacts"
                               data-action="@Url.Action("GetContactContacts", "Contacts", new { contactId = @contactId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteContactContact", "Contacts", new { id = item.Id})"
                               class="btnDelete"
                               data-title="Delete Relationship" 
                               data-refresh="true" 
                               data-target="#contactContacts"
                               data-action="@Url.Action("GetContactContacts", "Contacts", new { contactId = @contactId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>
            }

            @foreach (var item in @Model.ContactContactRels2)
            {
                <li class="list-group-item">
                    
                    @if (@contactId == item.Contact2Id)
                    {
                        @Html.ActionLink(string.Format("{0} {1} {2} {3}", item.Contact.CommonPerson.Prefix == null ? "" : item.Contact.CommonPerson.Prefix.Name, item.Contact.CommonPerson.FName, item.Contact.CommonPerson.MName, item.Contact.CommonPerson.LName), "Details", "Contacts", new { id = item.Contact.Id }, null)<br/>
                        @Html.DisplayFor(model => item.Contact.ContactType.Name)
                    }
                    else
                    {
                        @Html.ActionLink(string.Format("{0} {1} {2} {3}", item.Contact2.CommonPerson.Prefix == null ? "" : item.Contact2.CommonPerson.Prefix.Name, item.Contact2.CommonPerson.FName, item.Contact2.CommonPerson.MName, item.Contact2.CommonPerson.LName), "Details", "Contacts", new { id = item.Contact2.Id }, null)<br/>
                        @Html.DisplayFor(model => item.Contact2.ContactType.Name)
                    }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditContactContact", "Contacts", new { id = item.Id})"
                               class="btnEdit"
                               data-title="Edit Relationship"
                               data-refresh="true"
                               data-target="#contactContacts"
                               data-action="@Url.Action("GetContactContacts", "Contacts", new { contactId = @contactId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteContactContact", "Contacts", new { id = item.Id})"
                               class="btnDelete"
                               data-title="Delete Relationship"
                               data-refresh="true"
                               data-target="#contactContacts"
                               data-action="@Url.Action("GetContactContacts", "Contacts", new { contactId = @contactId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>

            }
        </ul>
    </div>
    <div class="panel-footer">
        <a href="@Url.Action("CreateContactContact", "Contacts", new { contactId = @contactId })"
           class="btnNew" 
           data-title="New Relationship" 
           data-refresh="true" 
           data-target="#contactContacts"
           data-action="@Url.Action("GetContactContacts", "Contacts", new { contactId = @contactId })"><span class="glyphicon glyphicon-plus"></span></a>
    </div>
</div>
