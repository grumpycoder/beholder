@model Event
@{
    const string viewItem = "Events";
    var eventId = (int)ViewData["EventId"];
    var count = Model.EventEventRels.Count() + Model.EventEventRels2.Count();
}
<div class="panel panel-primary">
    <div class="panel panel-heading">@viewItem <span class="badge pull-right">@string.Format("{0}", @count)</span></div>
    <div class="panel-body">
        <ul class="list-group">
            @if (@count == 0)
            {
                <li class="list-group-item">
                    No Known Event Relationships
                </li>
            }
            @foreach (var item in @Model.EventEventRels)
            {
                <li class="list-group-item">

                    @if (@eventId == item.EventId)
                    {
                        @Html.ActionLink(string.Format("{0}", item.Event2.EventName), "Details", "Events", new { id = item.Event2.Id }, null)<br />
                        @Html.DisplayFor(model => item.Event2.MovementClass.Name)
                    }
                    else
                    {
                        @Html.ActionLink(string.Format("{0}", item.Event.EventName), "Details", "Events", new { id = item.Event.Id }, null)<br />
                        @Html.DisplayFor(model => item.Event.MovementClass.Name)
                    }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditEventEvent", "Events", new { id = item.Id})"
                               class="btnEdit"
                               data-title="Edit Relationship"
                               data-refresh="true"
                               data-target="#eventEvents"
                               data-action="@Url.Action("GetEventEvents", "Events", new { eventId = @eventId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteEventEvent", "Events", new { id = item.Id})"
                               class="btnDelete"
                               data-title="Delete Relationship"
                               data-refresh="true"
                               data-target="#eventEvents"
                               data-action="@Url.Action("GetEventEvents", "Events", new { eventId = @eventId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>
            }

            @foreach (var item in @Model.EventEventRels2)
            {
                <li class="list-group-item">

                    @if (@eventId == item.Event2Id)
                    {
                        @Html.ActionLink(string.Format("{0}", item.Event.EventName), "Details", "Events", new { id = item.Event.Id }, null)<br />
                        @Html.DisplayFor(model => item.Event.MovementClass.Name)
                    }
                    else
                    {
                        @Html.ActionLink(string.Format("{0}", item.Event2.EventName), "Details", "Events", new { id = item.Event2.Id }, null)<br />
                        @Html.DisplayFor(model => item.Event2.MovementClass.Name)
                    }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditEventEvent", "Events", new { id = item.Id})"
                               class="btnEdit"
                               data-title="Edit Relationship"
                               data-refresh="true"
                               data-target="#eventEvents"
                               data-action="@Url.Action("GetEventEvents", "Events", new { eventId = @eventId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteEventEvent", "Events", new { id = item.Id})"
                               class="btnDelete"
                               data-title="Delete Relationship"
                               data-refresh="true"
                               data-target="#eventEvents"
                               data-action="@Url.Action("GetEventEvents", "Events", new { eventId = @eventId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>
            }
        </ul>
    </div>
    <div class="panel-footer">
        <a href="@Url.Action("CreateEventEvent", "Events", new { eventId = @eventId })"
           class="btnNew"
           data-title="New Relationship"
           data-refresh="true"
           data-target="#eventEvents"
           data-action="@Url.Action("GetEventEvents", "Events", new { eventId = @eventId })"><span class="glyphicon glyphicon-plus"></span></a>
    </div>
</div>
