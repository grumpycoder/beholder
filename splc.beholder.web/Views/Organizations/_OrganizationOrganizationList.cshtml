@model Organization
@{
    const string viewItem = "Organizations";
    var organizationId = (int)ViewData["OrganizationId"];
    var count = Model.OrganizationOrganizationRels.Count() + Model.OrganizationOrganizationRels2.Count(); 
}

<div class="panel panel-primary">
    <div class="panel panel-heading">@viewItem <span class="badge pull-right">@string.Format("{0}", @count)</span></div>
    <div class="panel-body">
        <ul class="list-group">
            @if (@count == 0)
            {
                <li class="list-group-item">
                    No Known Organization Relationships
                </li>
            }
            @foreach (var item in @Model.OrganizationOrganizationRels)
            {
                <li class="list-group-item">

                @if ((int)ViewData["OrganizationId"] == item.Organization2Id)
                {
                     @Html.ActionLink(item.Organization.OrganizationName, "Details", "Organizations", new { id = item.OrganizationId}, null)<br/>
                     @Html.DisplayFor(model => item.Organization.MovementClass.Name)
                }
                else
                {
                    @Html.ActionLink(item.Organization2.OrganizationName, "Details", "Organizations", new { id = item.Organization2Id }, null)<br/>
                    @Html.DisplayFor(model => item.Organization2.MovementClass.Name)
                }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditOrganizationOrganization", "Organizations", new { id = item.Id})" 
                               class="btnEdit" data-title="Edit Relationship" 
                               data-refresh="true" 
                               data-target="#organizationOrganizations"
                               data-action="@Url.Action("GetOrganizationOrganizations", "Organizations", new { organizationId = @organizationId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteOrganizationOrganization", "Organizations", new { id = item.Id})" 
                               class="btnDelete" 
                               data-title="Delete Relationship" 
                               data-refresh="true" 
                               data-target="#organizationOrganizations"
                               data-action="@Url.Action("GetOrganizationOrganizations", "Organizations", new { organizationId = @organizationId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>
            }

            @foreach (var item in @Model.OrganizationOrganizationRels2)
            {
                <li class="list-group-item">
                    
                @if ((int)ViewData["OrganizationId"] == item.Organization2Id)
                {
                     @Html.ActionLink(item.Organization.OrganizationName, "Details", "Organizations", new { id = item.OrganizationId}, null)<br/>
                     @Html.DisplayFor(model => item.Organization.MovementClass.Name)
                }
                else
                {
                    @Html.ActionLink(item.Organization2.OrganizationName, "Details", "Organizations", new { id = item.Organization2Id }, null)<br/>
                    @Html.DisplayFor(model => item.Organization2.MovementClass.Name)
                }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditOrganizationOrganization", "Organizations", new { id = item.Id})" 
                               class="btnEdit" data-title="Edit Relationship" 
                               data-refresh="true" 
                               data-target="#organizationOrganizations"
                               data-action="@Url.Action("GetOrganizationOrganizations", "Organizations", new { organizationId = @organizationId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteOrganizationOrganization", "Organizations", new { id = item.Id})" 
                               class="btnDelete" 
                               data-title="Delete Relationship" 
                               data-refresh="true" 
                               data-target="#organizationOrganizations"
                               data-action="@Url.Action("GetOrganizationOrganizations", "Organizations", new { organizationId = @organizationId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>

            }
        </ul>
    </div>
    <div class="panel-footer">
        <a href="@Url.Action("CreateOrganizationOrganization", "Organizations", new { organizationId = (int)ViewData["OrganizationId"]})" 
           class="btnNew" 
           data-title="New Relationship" 
           data-refresh="true" 
           data-target="#organizationOrganizations"
           data-action="@Url.Action("GetOrganizationOrganizations", "Organizations", new {  organizationId = (int)ViewData["OrganizationId"]})"><span class="glyphicon glyphicon-plus"></span></a>
    </div>
</div>


@*<table class="table table-bordered">
    <caption>
        @string.Format("Organizations ({0})", (Model.OrganizationOrganizationRels.Count() + Model.OrganizationOrganizationRels2.Count()))
    </caption>
    
    @if (Model.OrganizationOrganizationRels.Count() + Model.OrganizationOrganizationRels2.Count() == 0)
    {
        <tr>
            <td>No Known Organization Relationships</td>
        </tr>
    }

    @foreach (var organizationOrganizationRel in Model.OrganizationOrganizationRels)
    {
        //string controller = ViewData["Controller"].ToString();
        <tr>
            <td class="nowrap">
                <a href="@Url.Action("EditOrganizationOrganization", "Organizations", new { id = organizationOrganizationRel.Id})" class="btnEdit" data-title="Edit Relationship" data-refresh="true" data-action="@Url.Action("GetOrganizationOrganizations", "Organizations", new { organizationId = (int)ViewData["OrganizationId"] })"><i class="icon-pencil icon-large"></i></a>
                <a href="@Url.Action("DeleteOrganizationOrganization", "Organizations", new { id = organizationOrganizationRel.Id})" class="btnDelete" data-title="Delete Relationship" data-refresh="true" data-action="@Url.Action("GetOrganizationOrganizations", "Organizations", new { organizationId = (int)ViewData["OrganizationId"] })"><i class="icon-trash icon-large"></i></a>
            </td>
            @if ((int)ViewData["OrganizationId"] == organizationOrganizationRel.Organization2Id)
            {
                <td>@Html.ActionLink(organizationOrganizationRel.Organization.OrganizationName, "Details", "Organizations", new { id = organizationOrganizationRel.OrganizationId}, null)</td>
                <td>@Html.DisplayFor(model => organizationOrganizationRel.Organization.MovementClass.Name)</td>
            }
            else
            {
                <td>@Html.ActionLink(organizationOrganizationRel.Organization2.OrganizationName, "Details", "Organizations", new { id = organizationOrganizationRel.Organization2Id }, null)</td>
                <td>@Html.DisplayFor(model => organizationOrganizationRel.Organization2.MovementClass.Name)</td>
            }
        </tr>
    }
    @foreach (var organizationOrganizationRel in Model.OrganizationOrganizationRels2)
    {
        //string controller = ViewData["Controller"].ToString();
        <tr>
            <td class="nowrap">
                <a href="@Url.Action("EditOrganizationOrganization", "Organizations", new { id = organizationOrganizationRel.Id})" class="btnEdit" data-title="Edit Relationship" data-refresh="true" data-action="@Url.Action("GetOrganizationOrganizations", "Organizations", new { organizationId = (int)ViewData["OrganizationId"] })"><i class="icon-pencil icon-large"></i></a>
                <a href="@Url.Action("DeleteOrganizationOrganization", "Organizations", new { id = organizationOrganizationRel.Id})" class="btnDelete" data-title="Delete Relationship" data-refresh="true" data-action="@Url.Action("GetOrganizationOrganizations", "Organizations", new { organizationId = (int)ViewData["OrganizationId"] })"><i class="icon-trash icon-large"></i></a>
            </td>
            @if ((int)ViewData["OrganizationId"] == organizationOrganizationRel.Organization2Id)
            {
                <td>@Html.ActionLink(organizationOrganizationRel.Organization.OrganizationName, "Details", "Organizations", new { id = organizationOrganizationRel.OrganizationId}, null)</td>
                <td>@Html.DisplayFor(model => organizationOrganizationRel.Organization.MovementClass.Name)</td>
            }
            else
            {
                <td>@Html.ActionLink(organizationOrganizationRel.Organization2.OrganizationName, "Details", "Organizations", new { id = organizationOrganizationRel.Organization2Id }, null)</td>
                <td>@Html.DisplayFor(model => organizationOrganizationRel.Organization2.MovementClass.Name)</td>
            }
        </tr>
    }
    <tr>
        <td colspan="3">
            <a href="@Url.Action("CreateOrganizationOrganization", "Organizations", new { organizationId = (int)ViewData["OrganizationId"]})" class="btnNew" data-title="New Relationship" data-refresh="true" data-action="@Url.Action("GetOrganizationOrganizations", "Organizations", new {  organizationId = (int)ViewData["OrganizationId"]})"><i class="icon-plus-sign icon-large"></i></a>
        </td>
    </tr>
</table>*@