@model Organization


@* This partial view defines form fields that will appear when creating and editing entities *@
@Html.HiddenFor(m => m.Id)
@Html.HiddenFor(m => m.CreatedUserId)
@Html.HiddenFor(m => m.DateCreated)

<fieldset class="col-sm-6">
    <legend>Name</legend>
    <div class="form-group">
        @Html.BootstrapLabelFor(model => model.OrganizationName)
        <div class="col-sm-8">
            @Html.EditorFor(model => model.OrganizationName)
            <span class="help-block">@Html.ValidationMessageFor(model => model.OrganizationName)</span>
        </div>
    </div>

    <div class="form-group">
        @Html.BootstrapLabelFor(model => model.OrganizationDesc)
        <div class="col-sm-8">
            @Html.EditorFor(model => model.OrganizationDesc)
            <span class="help-block">@Html.ValidationMessageFor(model => model.OrganizationDesc)</span>
        </div>
    </div>

    <div class="form-group">
        @Html.BootstrapLabelFor(model => model.ConfidentialityTypeId)
        <div class="col-sm-8">
            @Html.DropDownListFor(model => model.ConfidentialityTypeId, ((IEnumerable<ConfidentialityType>)ViewBag.PossibleConfidentialityTypes).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.ConfidentialityTypeId)
                }), "Choose...", new { @class = "form-control", data_val_required = "Confidentiality Type is required." })
            <span class="help-block">@Html.ValidationMessageFor(model => model.ConfidentialityTypeId)</span>
        </div>
    </div>

</fieldset>

<fieldset class="col-sm-6">
    <legend>Specifics</legend>
    <div class="form-group">
        @Html.BootstrapLabelFor(model => model.MovementClassId)
        <div class="col-sm-8">
            @Html.DropDownListFor(model => model.MovementClassId, ((IEnumerable<MovementClass>)ViewBag.PossibleMovementClasses).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.MovementClassId)
                }), "Choose...", new { @class = "form-control", data_val_required = "Movement is required." })
            <span class="help-block">@Html.ValidationMessageFor(model => model.MovementClassId)</span>
        </div>
    </div>

    <div class="form-group">
        @Html.BootstrapLabelFor(model => model.OrganizationTypeId)
        <div class="col-sm-8">
            @Html.DropDownListFor(model => model.OrganizationTypeId, ((IEnumerable<OrganizationType>)ViewBag.PossibleOrganizationTypes).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.OrganizationTypeId)
                }), "Choose...", new { @class = "form-control", data_val_required = "Organization Type is required." })
            <span class="help-block">@Html.ValidationMessageFor(model => model.OrganizationTypeId)</span>
        </div>
    </div>

    <div class="form-group">
        @Html.BootstrapLabelFor(model => model.ActiveYear)
        <div class="col-sm-8">
            @Html.EditorFor(model => model.ActiveYear)
            <span class="help-block">@Html.ValidationMessageFor(model => model.ActiveYear)</span>
        </div>
    </div>

    <div class="form-group">
        @Html.BootstrapLabelFor(model => model.FormedDate)
        <div class="col-sm-8">
            @Html.EditorFor(model => model.FormedDate)
            <span class="help-block">@Html.ValidationMessageFor(model => model.FormedDate)</span>
        </div>
    </div>

    <div class="form-group">
        @Html.BootstrapLabelFor(model => model.DisbandDate)
        <div class="col-sm-8">
            @Html.EditorFor(model => model.DisbandDate)
            <span class="help-block">@Html.ValidationMessageFor(model => model.DisbandDate)</span>
        </div>
    </div>

</fieldset>


<fieldset class="col-sm-6">
    <legend>Status</legend>

    <div class="form-group">
        @Html.BootstrapLabelFor(model => model.ApprovalStatusId)
        <div class="col-sm-8">
            @Html.DropDownListFor(model => model.ApprovalStatusId, ((IEnumerable<ApprovalStatus>)ViewBag.PossibleApprovalStatus).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.ApprovalStatusId)
                }), "Choose...", new { @class = "form-control" })
            <span class="help-block">@Html.ValidationMessageFor(model => model.ApprovalStatusId)</span>
        </div>
    </div>


    @*<div class="form-group">
            @Html.BootstrapLabelFor(model => model.ReportStatusFlag)
            <div class="col-sm-8">
                @Html.EditorFor(model => model.ReportStatusFlag)
                @Html.ValidationMessageFor(model => model.ReportStatusFlag)
            </div>
        </div>*@

    <div class="form-group">
        @Html.BootstrapLabelFor(model => model.ActiveStatusId)
        <div class="col-sm-8">
            @Html.DropDownListFor(model => model.ActiveStatusId, ((IEnumerable<ActiveStatus>)ViewBag.PossibleActiveStatus).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Name),
                    Value = option.Id.ToString(),
                    Selected = (Model != null) && (option.Id == Model.ActiveStatusId)
                }), "Choose...", new { @class = "form-control" })
            <span class="help-block">@Html.ValidationMessageFor(model => model.ActiveStatusId)</span>
        </div>
    </div>

</fieldset>
