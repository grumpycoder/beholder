@using splc.domain.Models;
@model IEnumerable<OrganizationSubscriptionRel>
@{
    var viewItem = ViewBag.Controller == "Organizations" ? "Subscriptions" : "Organizations";
    var source = ViewBag.Controller == "Organizations" ? "Organizations" : "Subscriptions";
    var subscriptionId = ViewData["SubscriptionId"] == null ? -1 : (int)ViewData["SubscriptionId"];
    var organizationId = ViewData["OrganizationId"] == null ? -1 : (int)ViewData["OrganizationId"]; 
    var showOrganization = ViewBag.Controller == "Subscriptions";
}
@*//TODO: Does not insert or delete properly*@

<div class="panel panel-primary">
    <div class="panel panel-heading">@viewItem <span class="badge pull-right">@string.Format("{0}", Model.Count())</span></div>
    <div class="panel-body">
        <ul class="list-group">
            @if (!Model.Any())
            {
                <li class="list-group-item">
                    @string.Format("No Known {0} Relationships", viewItem)
                </li>
            }
            @foreach (var item in @Model)
            {
                <li class="list-group-item">
                    @if (showOrganization){
                        @Html.ActionLink(item.Organization.OrganizationName, "Details", "Organizations", new { id = item.Organization.Id }, null)<br/>
                        @Html.DisplayFor(model => item.Organization.MovementClass.Name)
                    }
                    else{
                        @Html.ActionLink(item.Subscription.PublicationName, "Details", "Subscriptions", new { id = item.Subscription.Id }, null)<br/>
                        @Html.DisplayFor(model => item.Subscription.SubscriptionRate)
                    }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditOrganizationSubscription", "Organizations", new { id = item.Id, source = @source })"
                               class="btnEdit"
                               data-title="Edit Relationship"
                               data-refresh="true"
                               data-target="#organizationSubscriptions"
                               data-action="@Url.Action("GetOrganizationSubscriptions", "Organizations", new { organizationId = @organizationId, subscriptionId = @subscriptionId })"><span class="glyphicon glyphicon-pencil"></span></a>
                            <a href="@Url.Action("DeleteOrganizationSubscription", "Organizations", new { id = item.Id})"
                               class="btnDelete"
                               data-title="Delete Relationship"
                               data-refresh="true"
                               data-target="#organizationSubscriptions"
                               data-action="@Url.Action("GetOrganizationSubscriptions", "Organizations", new { organizationId = @organizationId, subscriptionId = @subscriptionId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>

            }
        </ul>
    </div>
    <div class="panel-footer">
        <a href="@Url.Action("CreateOrganizationSubscription", "Organizations", new { organizationId = @organizationId, subscriptionId = @subscriptionId })"
           class="btnNew"
           data-title="New Relationship"
           data-refresh="true"
           data-target="#organizationSubscriptions"
           data-action="@Url.Action("GetOrganizationSubscriptions", "Organizations", new { organizationId = @organizationId, subscriptionId = @subscriptionId })"><span class="glyphicon glyphicon-plus"></span></a>
    </div>
</div>


@*<table class="table table-bordered">
    <caption>
        @((string) ViewData["Controller"] == "Subscriptions" ? string.Format("Organizations ({0})", Model.Count()) : string.Format("Subscriptions ({0})", Model.Count()))
    </caption>
    
    @if (!Model.Any())
    {
        <tr>
            <td>@string.Format("No Known {0} Relationships",(string) ViewData["Controller"] == "Subscriptions" ? "Organization" : "Subscription")</td>
        </tr>
    }
    @foreach (var organizationSubscriptionRel in Model)
    {
        //string controller = ViewData["Controller"].ToString();
        <tr>
            <td class="nowrap">
                <a href="@Url.Action("EditOrganizationSubscription", "Organizations", new { id = organizationSubscriptionRel.Id, source = ViewData["Controller"].ToString()})" 
                    class="btnEdit" 
                    data-title="Edit Relationship" 
                    data-refresh="true" 
                    data-action="@Url.Action("GetOrganizationSubscriptions", "Organizations", new { organizationId =  ViewData["OrganizationId"] == null ? -1 : (int)ViewData["OrganizationId"] , subscriptionId = ViewData["SubscriptionId"] == null ? -1 : (int)ViewData["SubscriptionId"] })"><i class="icon-pencil icon-large"></i></a>
                <a href="@Url.Action("DeleteOrganizationSubscription", "Organizations", new { id = organizationSubscriptionRel.Id})" 
                    class="btnDelete" 
                    data-title="Delete Relationship" 
                    data-refresh="true" 
                    data-action="@Url.Action("GetOrganizationSubscriptions", "Organizations", new { organizationId =  ViewData["OrganizationId"] == null ? -1 : (int)ViewData["OrganizationId"]  , subscriptionId = ViewData["SubscriptionId"] == null ? -1 : (int)ViewData["SubscriptionId"] })"><i class="icon-trash icon-large"></i></a>
            </td>
            @if (ViewData["Controller"].ToString() == "Subscriptions")
            {
                <td>
                    @Html.ActionLink(organizationSubscriptionRel.Organization.OrganizationName, "Details", "Organizations", new { id = organizationSubscriptionRel.Organization.Id }, null)
                </td>
                <td>@Html.DisplayFor(model => organizationSubscriptionRel.Organization.MovementClass.Name)</td>
            }
            else
            {
                <td>
                    @Html.ActionLink(organizationSubscriptionRel.Subscription.PublicationName, "Details", "Subscriptions", new { id = organizationSubscriptionRel.Subscription.Id }, null)
                </td>
                <td>@Html.DisplayFor(model => organizationSubscriptionRel.Subscription.SubscriptionRate)</td>
            }
        </tr>
    }
    <tr>
        <td colspan="3">
            <a href="@Url.Action("CreateOrganizationSubscription", "Organizations", new { organizationId = ViewData["OrganizationId"] == null ? -1 : (int)ViewData["OrganizationId"]  , subscriptionId = ViewData["SubscriptionId"] == null ? -1 : (int)ViewData["SubscriptionId"]})" 
                class="btnNew" 
                data-title="New Relationship" 
                data-refresh="true"
                data-action="@Url.Action("GetOrganizationSubscriptions", "Organizations", new { organizationId = ViewData["OrganizationId"] == null ? -1 : ViewData["OrganizationId"], subscriptionId = ViewData["SubscriptionId"] == null ? -1 : (int)ViewData["SubscriptionId"]})"><i class="icon-plus-sign icon-large"></i></a>
        </td>
    </tr>
</table>*@