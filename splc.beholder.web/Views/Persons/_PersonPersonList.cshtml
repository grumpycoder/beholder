@model BeholderPerson
@{
    const string viewItem = "People";
    var beholderPersonId = (int)ViewData["PersonId"];
    var count = Model.PersonPersonRels.Count() + Model.PersonPersonRels2.Count(); 
}

<div class="panel panel-primary">
    <div class="panel panel-heading">@viewItem <span class="badge pull-right">@string.Format("{0}", @count)</span></div>
    <div class="panel-body">
        <ul class="list-group">
            @if (@count == 0)
            {
                <li class="list-group-item">
                    No Known Person Relationships
                </li>
            }
            @foreach (var item in @Model.PersonPersonRels)
            {
                <li class="list-group-item">

                @if (@beholderPersonId == item.Person2Id)
                {
                     @Html.ActionLink(string.Format("{0}", item.BeholderPerson.CommonPerson.FullName), "Details", "Persons", new { id = item.BeholderPerson.Id }, null)<br />
                     @Html.DisplayFor(model => item.BeholderPerson.MovementClass.Name)
                }
                else
                {
                    @Html.ActionLink(string.Format("{0}", item.BeholderPerson2.CommonPerson.FullName), "Details", "Persons", new { id = item.BeholderPerson2.Id }, null)<br/>
                    @Html.DisplayFor(model => item.BeholderPerson2.MovementClass.Name)
                }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditPersonPerson", "Persons", new { id = item.Id})" class="btnEdit" 
                               data-title="Edit Relationship" 
                               data-refresh="true" 
                               data-target="#personPersons"
                               data-action="@Url.Action("GetPersonPersons", "Persons", new { personId = @beholderPersonId })"><span class="glyphicon glyphicon-pencil"></span></a>

                            <a href="@Url.Action("DeletePersonPerson", "Persons", new { id = item.Id})" class="btnDelete" 
                               data-title="Delete Relationship" 
                               data-refresh="true" 
                               data-target="#personPersons"
                               data-action="@Url.Action("GetPersonPersons", "Persons", new { personId = @beholderPersonId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>
            }

            @foreach (var item in @Model.PersonPersonRels2)
            {
                <li class="list-group-item">
                    
                @if (@beholderPersonId == item.Person2Id)
                {
                     @Html.ActionLink(string.Format("{0} {1} {2} {3}", item.BeholderPerson.CommonPerson.Prefix == null ? "" : item.BeholderPerson.CommonPerson.Prefix.Name, item.BeholderPerson.CommonPerson.FName, item.BeholderPerson.CommonPerson.MName, item.BeholderPerson.CommonPerson.LName), "Details", "Persons", new { id = item.BeholderPerson.Id }, null)<br/>
                     @Html.DisplayFor(model => item.BeholderPerson.MovementClass.Name)
                }
                else
                {
                    @Html.ActionLink(string.Format("{0} {1} {2} {3}", item.BeholderPerson2.CommonPerson.Prefix == null ? "" : item.BeholderPerson2.CommonPerson.Prefix.Name, item.BeholderPerson2.CommonPerson.FName, item.BeholderPerson2.CommonPerson.MName, item.BeholderPerson2.CommonPerson.LName), "Details", "Persons", new { id = item.BeholderPerson2.Id }, null)<br/>
                    @Html.DisplayFor(model => item.BeholderPerson2.MovementClass.Name)
                }
                    <div class="clearfix">
                        <span class="pull-right">
                            <a href="@Url.Action("EditPersonPerson", "Persons", new { id = item.Id})" class="btnEdit" 
                               data-title="Edit Relationship" 
                               data-refresh="true" 
                               data-target="#personPersons"
                               data-action="@Url.Action("GetPersonPersons", "Persons", new { personId = @beholderPersonId })"><span class="glyphicon glyphicon-pencil"></span></a>

                            <a href="@Url.Action("DeletePersonPerson", "Persons", new { id = item.Id})" class="btnDelete" 
                               data-title="Delete Relationship" 
                               data-refresh="true" 
                               data-target="#personPersons"
                               data-action="@Url.Action("GetPersonPersons", "Persons", new { personId = @beholderPersonId })"><span class="glyphicon glyphicon-trash"></span></a>
                        </span>
                    </div>
                </li>

            }
        </ul>
    </div>
    <div class="panel-footer">
        <a href="@Url.Action("CreatePersonPerson", "Persons", new { personId = @beholderPersonId})" class="btnNew" 
           data-title="New Relationship" 
           data-refresh="true" 
           data-target="#personPersons"
           data-action="@Url.Action("GetPersonPersons", "Persons", new {  personId = @beholderPersonId})"><span class="glyphicon glyphicon-plus"></span></a>
    </div>
</div>

