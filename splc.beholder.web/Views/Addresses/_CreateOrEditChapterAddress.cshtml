@model AddressChapterRel

<style>
    input,
    select,
    textarea {
        max-width: 100%;
    }
</style>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
{

    @* This partial view defines form fields that will appear when creating and editing entities *@
    @Html.HiddenFor(m => m.ChapterId)
    @Html.HiddenFor(m => m.Address.Id)
    @Html.HiddenFor(m => m.AddressId)
    @Html.HiddenFor(m => m.Address.CreatedUserId)
    @Html.HiddenFor(m => m.Address.DateCreated)
    @Html.HiddenFor(m => m.Address.ModifiedUserId)
    @Html.HiddenFor(m => m.Address.DateModified)
    @Html.HiddenFor(m => m.CreatedUserId)
    @Html.HiddenFor(m => m.DateCreated)
    @Html.HiddenFor(m => m.ModifiedUserId)
    @Html.HiddenFor(m => m.DateModified)
    @Html.HiddenFor(m => m.FirstKnownUseDate)
    <div class="row">
        <div class="col-md-12 col-md-offset-0 col-lg-12 col-lg-offset-0">

            <!-- Text input-->
            <div class="form-group">
                <div class="col-sm-12">
                    <input id="autocomplete" class="geo form-control" placeholder="Enter your address" type="text" autofocus="autofocus" />
                </div>
            </div>

            <!-- Text input-->
            <div class="form-group">
                @Html.LabelFor(model => model.AddressType, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(model => model.AddressTypeId, ((IEnumerable<AddressType>)ViewBag.PossibleAddressTypes).Select(option => option != null ? new SelectListItem
                                            {
                                                Text = (option.Name),
                                                Value = option.Id.ToString(),
                                                Selected = (Model != null) && (option.Id == Model.AddressTypeId)
                                            } : null), "Choose...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AddressTypeId, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.PrimaryStatus, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(model => model.PrimaryStatusId, ((IEnumerable<PrimaryStatus>)ViewBag.PossiblePrimaryStatus).Select(option => option != null ? new SelectListItem
                                        {
                                            Text = (option.Name),
                                            Value = option.Id.ToString(),
                                            Selected = (Model != null) && (option.Id == Model.PrimaryStatusId)
                                        } : null), "Choose...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PrimaryStatusId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.Address1, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Address.Address1, new { @class = "form-control", @data_location = "name" })
                    @Html.ValidationMessageFor(model => model.Address.Address1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.Address2, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Address.Address2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address.Address2, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Text input-->
            <div class="form-group">
                @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Address.City, new { @class = "form-control", @data_location = "locality" })
                    @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Text input-->
            <div class="form-group">
                @Html.LabelFor(model => model.Address.StateId, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DropDownListFor(model => model.Address.StateId, ((IEnumerable<State>)ViewBag.PossibleStates).Select(option => option != null ? new SelectListItem
                                    {
                                        Text = (option.StateName),
                                        Value = option.Id.ToString(),
                                        Selected = (Model != null) && (option.Id == Model.Address.StateId)
                                    } : null), "Choose...", new { @class = "form-control", @data_location = "administrative_area_level_1" })
                    @Html.ValidationMessageFor(model => model.Address.StateId, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Address.Zip5, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(model => model.Address.Zip5, new { @class = "form-control", @data_location = "postal_code" })
                    @Html.ValidationMessageFor(model => model.Address.Zip5, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Text input-->
            <div class="form-group">
                @Html.LabelFor(model => model.Address.County, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(model => model.Address.County, new { @class = "form-control", @data_location = "administrative_area_level_2" })
                    @Html.ValidationMessageFor(model => model.Address.County, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.Address.Country, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(model => model.Address.Country, new { @data_location = "country", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address.Country, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Text input-->
            <div class="form-group">
                @Html.LabelFor(model => model.Address.Latitude, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(model => model.Address.Latitude, new { @class = "form-control", @data_location = "lat" })
                    @Html.ValidationMessageFor(model => model.Address.Latitude, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Address.Longitude, htmlAttributes: new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.TextBoxFor(model => model.Address.Longitude, new { @data_location = "lng", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address.Longitude, "", new { @class = "text-danger" })
                </div>
            </div>


        </div><!-- /.col-lg-12 -->
    </div><!-- /.row -->

}
<script src="~/Scripts/jquery.geocomplete.js"></script>
<script type="text/javascript">
    $(function () {
        initPartialControls();

        $(".geo").geocomplete({
            details: "form",
            detailsAttribute: "data-location"
        });

        $('#Address_Address1').change(function () {
            if ($('#Address_Address1').val() == $('#Address_StateId option:selected').text()) {
                $('#Address_Address1').val('');
            }
            if ($('#Address_Address1').val() == $('#Address_City').val()) {
                $('#Address_Address1').val('');
            }
        });

        $('#Address_City').change(function () {
            if ($('#Address_Address1').val() == $('#Address_City').val()) {
                $('#Address_Address1').val('');
            }
        });

        $('#Address_StateId').change(function () {
            var optionSelected = $("option:selected", this);
            if (optionSelected.text() == $('#Address_Address1').val()) {
                $('#Address_Address1').val('');
            }
        });

    });
</script>

