@model IEnumerable<MediaImageMediaImageRel>
@{
    var viewItem = ViewBag.Controller == "MediaImages" ? "Images" : "Images";
    var source = ViewBag.Controller == "MediaImages" ? "MediaImages" : "MediaImages";
    var mediaImageId = ViewData["MediaImageId"] == null ? -1 : (int)ViewData["MediaImageId"];
    var subscriptionId = ViewData["MediaImageId"] ?? -1;

    var showSubscription = ViewBag.Controller == "MediaImages";
}
<div class="panel panel-primary">
    <div class="panel panel-heading">@viewItem <span class="badge pull-right">@string.Format("{0}", Model.Count())</span></div>
    <div class="panel-body">

        @if (!Model.Any())
        {
            <ul class="list-group">
                <li class="list-group-item">
                    @string.Format("No Known {0} Relationships", viewItem)
                </li>
            </ul>
        }


        @*@if (showSubscription)
        {
            <ul class="list-group">
                @foreach (var item in Model)
                {
                    <li class="list-group-item">
                        @Html.ActionLink(string.Format("{0}", item.Subscription.PublicationName), "Details", "Subscriptions", new { id = item.SubscriptionId }, null)
                        @Html.DisplayFor(model => item.Subscription.PublicationName)

                        <div class="clearfix">
                            <span class="pull-right">
                                <a href="@Url.Action("EditMediaImageSubscription", "MediaImages", new { id = item.Id, @source })"
                                   class="btnEdit"
                                   data-title="Edit Relationship"
                                   data-refresh="true"
                                   data-target="#mediaImageSubscriptions"
                                   data-action="@Url.Action("GetMediaImageSubscriptions", "MediaImages", new { @subscriptionId, @mediaImageId })"><span class="glyphicon glyphicon-pencil"></span></a>
                                <a href="@Url.Action("DeleteMediaImageSubscription", "MediaImages", new { id = item.Id })"
                                   class="btnDelete"
                                   data-title="Delete Relationship"
                                   data-refresh="true"
                                   data-target="#mediaImageSubscriptions"
                                   data-action="@Url.Action("GetMediaImageSubscriptions", "MediaImages", new { @subscriptionId, @mediaImageId })"><span class="glyphicon glyphicon-trash"></span></a>
                            </span>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {*@

    <div class="carousel slide media-carousel" id="media">

        <div class="carousel-inner">
            @{
                var items = Model.Take(6);
                var iterations = 0;
            }
            @while (items.Any())
            {
                var active = iterations == 0 ? "active" : "";

                <div class="item @active" style="max-height: 240px;">
                    <div class="row">
                        @foreach (var item in items)
                        {
                                @*<div class="col-md-2">
                                    <div class="">
                                        <img src="@Url.Action("ShowImage", "MediaImages", new { item.MediaImage2.Image.Id })" width="100" height="190">
                                        @Html.ActionLink(string.Format("{0}", item.MediaImage2.ImageTitle), "Details", "MediaImages", new { id = item.MediaImage2Id }, null)
                                    </div>
                                </div>*@

                            <div class="col-md-2">
                                <div class="">
                                    @Html.ActionLink(string.Format("{0}", item.MediaImage2.ImageTitle), "Details", "MediaImages", new { id = item.MediaImageId }, null)

                                    @if (item.MediaImage.Image != null)
                                    {
                                        <img src="@Url.Action("ShowImage", "MediaImages", new { item.MediaImage.Image.Id })" width="100" height="190" />
                                    }
                                    @if (item.MediaImage.Image == null)
                                    {
                                        <img src="~/Content/images/image-missing.jpg" alt="" width="100" height="190" />
                                    }
                                    <div class="pull-right">
                                        <a href="@Url.Action("DeleteMediaImageMediaImage", "MediaImages", new { id = item.Id })"
                                           class="btnDelete"
                                           data-title="Delete Relationship"
                                           data-refresh="true"
                                           data-target="#mediaImageMediaImages"
                                           data-action="@Url.Action("GetMediaImageMediaImages", "MediaImages", new { @mediaImageId })"><span class="glyphicon glyphicon-trash"></span></a>
                                    </div>
                                </div>
                            </div>
                                
                        }
                    </div>
                </div>
                iterations++;
                items = Model.Skip(6 * iterations).Take(6);
            }
        </div>

        <a class="left carousel-control" href="#media" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left"></span>
        </a>
        <a class="right carousel-control" href="#media" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right"></span>
        </a>
    </div>
    </div>

    <div class="panel-footer">
        <a href="@Url.Action("CreateMediaImageMediaImage", "MediaImages", new { @mediaImageId })"
           class="btnNew"
           data-title="New Relationship"
           data-refresh="true"
           data-target="#mediaImageMediaImages"
           data-action="@Url.Action("GetMediaImageMediaImages", "MediaImages", new { @mediaImageId })"><span class="glyphicon glyphicon-plus"></span></a>
    </div>
</div>

