<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="splc.domain" namespace="splc.domain" xmlns="urn:nhibernate-mapping-2.2">
  <class name="BeholderCompany" table="Company" schema="Beholder">
    <id name="Id" type="Int32">
      <column name="Id" not-null="true" precision="10" scale="0" sql-type="int" />
      <generator class="identity" />
    </id>
    <property name="CompanyName" type="String">
      <column name="CompanyName" not-null="true" length="100" sql-type="varchar" />
    </property>
    <property name="CompanyDesc" type="String">
      <column name="CompanyDesc" not-null="false" length="256" sql-type="varchar" />
    </property>
    <property name="BusinessLicenseInfo" type="String">
      <column name="BusinessLicenseInfo" not-null="true" length="100" sql-type="varchar" />
    </property>
    <property name="OpenDate" type="DateTime">
      <column name="OpenDate" not-null="false" sql-type="datetime2" />
    </property>
    <property name="CloseDate" type="DateTime">
      <column name="CloseDate" not-null="false" sql-type="datetime2" />
    </property>
    <property name="YearsInBusiness" type="Int32">
      <column name="YearsInBusiness" not-null="false" precision="10" scale="0" sql-type="int" />
    </property>
    <property name="DateCreated" type="DateTime">
      <column name="DateCreated" not-null="true" sql-type="datetime2" />
    </property>
    <property name="DateModified" type="DateTime">
      <column name="DateModified" not-null="false" sql-type="datetime2" />
    </property>
    <property name="DateDeleted" type="DateTime">
      <column name="DateDeleted" not-null="false" sql-type="datetime2" />
    </property>
    <many-to-one name="BeholderActiveStatus" class="BeholderActiveStatus">
      <column name="ActiveStatusId" not-null="true" precision="10" scale="0" sql-type="int" />
    </many-to-one>
    <many-to-one name="BeholderBusinessClass" class="BeholderBusinessClass">
      <column name="BusinessClassId" not-null="false" precision="10" scale="0" sql-type="int" />
    </many-to-one>
    <many-to-one name="BeholderCompanyType" class="BeholderCompanyType">
      <column name="CompanyTypeId" not-null="true" precision="10" scale="0" sql-type="int" />
    </many-to-one>
    <many-to-one name="BeholderConfidentialityType" class="BeholderConfidentialityType">
      <column name="ConfidentialityTypeId" not-null="false" precision="10" scale="0" sql-type="int" />
    </many-to-one>
    <many-to-one name="BeholderMovementClass" class="BeholderMovementClass">
      <column name="MovementClassId" not-null="false" precision="10" scale="0" sql-type="int" />
    </many-to-one>
    <many-to-one name="SecurityUser_CreatedUserId" class="SecurityUser">
      <column name="CreatedUserId" not-null="true" precision="10" scale="0" sql-type="int" />
    </many-to-one>
    <many-to-one name="SecurityUser_DeletedUserId" class="SecurityUser">
      <column name="DeletedUserId" not-null="false" precision="10" scale="0" sql-type="int" />
    </many-to-one>
    <many-to-one name="SecurityUser_ModifiedUserId" class="SecurityUser">
      <column name="ModifiedUserId" not-null="false" precision="10" scale="0" sql-type="int" />
    </many-to-one>
    <set name="BeholderContactCompanyRels" inverse="true" generic="false">
      <key>
        <column name="CompanyId" />
      </key>
      <one-to-many class="BeholderContactCompanyRel" />
    </set>
    <set name="BeholderAliasCompanyRels" inverse="true" generic="false">
      <key>
        <column name="CompanyId" />
      </key>
      <one-to-many class="BeholderAliasCompanyRel" />
    </set>
    <set name="BeholderAddressCompanyRels" inverse="true" generic="false">
      <key>
        <column name="CompanyId" />
      </key>
      <one-to-many class="BeholderAddressCompanyRel" />
    </set>
  </class>
</hibernate-mapping>