CREATE TABLE [Beholder].[MediaAudioVideo] (
    [Id]                      INT            IDENTITY (1, 1) NOT NULL,
    [MediaTypeId]             INT            NOT NULL,
    [AudioVideoTypeId]        INT            NOT NULL,
    [Title]                   VARCHAR (100)  NOT NULL,
    [DateReceivedRecorded]    DATETIME2 (7)  NULL,
    [DateAired]               DATETIME2 (7)  NULL,
    [SpeakerCommentator]      VARCHAR (100)  NULL,
    [MediaLength]             VARCHAR (15)   NULL,
    [NewsSourceId]            INT            NULL,
    [MovementClassId]         INT            NULL,
    [ConfidentialityTypeId]   INT            NULL,
    [DateRenewalPermission]   DATETIME2 (7)  NULL,
    [RenewalPermissionTypeId] INT            NULL,
    [RenewalPermission]       VARCHAR (500)  NULL,
    [Summary]                 VARCHAR (4000) NULL,
    [City]                    VARCHAR (40)   NULL,
    [County]                  VARCHAR (40)   NULL,
    [StateId]                 INT            NULL,
    [DateCreated]             DATETIME2 (7)  CONSTRAINT [DF_MediaAudioVideo_DateCreated] DEFAULT (getdate()) NULL,
    [CreatedUserId]           INT            NULL,
    [DateModified]            DATETIME2 (7)  NULL,
    [ModifiedUserId]          INT            NULL,
    [RemovalStatusId]         INT            NULL,
    [RemovalReason]           VARCHAR (50)   NULL,
    [DateDeleted]             DATETIME2 (7)  NULL,
    [DeletedUserId]           INT            NULL,
    [CatalogId]               VARCHAR (10)   NULL,
    CONSTRAINT [PK_MediaAudioVideo] PRIMARY KEY CLUSTERED ([Id] ASC) ON [BeholderData1],
    CONSTRAINT [FK_MediaAudioVideo_ConfidentialityType] FOREIGN KEY ([ConfidentialityTypeId]) REFERENCES [Beholder].[ConfidentialityType] ([Id]),
    CONSTRAINT [FK_MediaAudioVideo_CreatedUser] FOREIGN KEY ([CreatedUserId]) REFERENCES [Security].[User] ([Id]),
    CONSTRAINT [FK_MediaAudioVideo_DeletedUser] FOREIGN KEY ([DeletedUserId]) REFERENCES [Security].[User] ([Id]),
    CONSTRAINT [FK_MediaAudioVideo_MediaType] FOREIGN KEY ([MediaTypeId]) REFERENCES [Beholder].[MediaType] ([Id]),
    CONSTRAINT [FK_MediaAudioVideo_ModifiedUser] FOREIGN KEY ([ModifiedUserId]) REFERENCES [Security].[User] ([Id]),
    CONSTRAINT [FK_MediaAudioVideo_MovementClass] FOREIGN KEY ([MovementClassId]) REFERENCES [Beholder].[MovementClass] ([Id]),
    CONSTRAINT [FK_MediaAudioVideo_NewsSource] FOREIGN KEY ([NewsSourceId]) REFERENCES [Beholder].[NewsSource] ([Id]),
    CONSTRAINT [FK_MediaAudioVideo_RemovalStatus] FOREIGN KEY ([RemovalStatusId]) REFERENCES [Beholder].[RemovalStatus] ([Id]),
    CONSTRAINT [FK_MediaAudioVideo_RenewalPermmisionType] FOREIGN KEY ([RenewalPermissionTypeId]) REFERENCES [Beholder].[RenewalPermmisionType] ([Id]),
    CONSTRAINT [FK_MediaAudioVideo_State] FOREIGN KEY ([StateId]) REFERENCES [Common].[State] ([Id])
);

