CREATE TABLE [Beholder].[Event] (
    [Id]                       INT            IDENTITY (1, 1) NOT NULL,
    [EventName]                VARCHAR (100)  NOT NULL,
    [EventDate]                DATETIME2 (7)  NULL,
    [EventDocumentationTypeId] INT            NULL,
    [ApprovalStatusId]         INT            NOT NULL,
    [ActiveStatusId]           INT            NOT NULL,
    [ActiveYear]               INT            NOT NULL,
    [ReportStatusFlag]         BIT            NOT NULL,
    [MovementClassId]          INT            NULL,
    [ConfidentialityTypeId]    INT            NULL,
    [Religion]                 VARCHAR (20)   NULL,
    [Summary]                  VARCHAR (4000) NULL,
    [WebIncidentTypeId]        INT            NULL,
    [NewsSourceId]             INT            NULL,
    [DateCreated]              DATETIME2 (7)  CONSTRAINT [DF_Event_DateCreated] DEFAULT (getdate()) NOT NULL,
    [CreatedUserId]            INT            NOT NULL,
    [DateModified]             DATETIME2 (7)  NULL,
    [ModifiedUserId]           INT            NULL,
    [RemovalStatusId]          INT            NULL,
    [RemovalReason]            VARCHAR (50)   NULL,
    [DateDeleted]              DATETIME2 (7)  NULL,
    [DeletedUserId]            INT            NULL,
    CONSTRAINT [PK_Event] PRIMARY KEY CLUSTERED ([Id] ASC) ON [BeholderData1],
    CONSTRAINT [FK_Event_ActiveStatus] FOREIGN KEY ([ActiveStatusId]) REFERENCES [Beholder].[ActiveStatus] ([Id]),
    CONSTRAINT [FK_Event_ApprovalStatus] FOREIGN KEY ([ApprovalStatusId]) REFERENCES [Beholder].[ApprovalStatus] ([Id]),
    CONSTRAINT [FK_Event_ConfidentialityType] FOREIGN KEY ([ConfidentialityTypeId]) REFERENCES [Beholder].[ConfidentialityType] ([Id]),
    CONSTRAINT [FK_Event_CreatedUser] FOREIGN KEY ([CreatedUserId]) REFERENCES [Security].[User] ([Id]),
    CONSTRAINT [FK_Event_DeletedUser] FOREIGN KEY ([DeletedUserId]) REFERENCES [Security].[User] ([Id]),
    CONSTRAINT [FK_Event_ModifiedUser] FOREIGN KEY ([ModifiedUserId]) REFERENCES [Security].[User] ([Id]),
    CONSTRAINT [FK_Event_MovementClass] FOREIGN KEY ([MovementClassId]) REFERENCES [Beholder].[MovementClass] ([Id]),
    CONSTRAINT [FK_Event_NewsSource] FOREIGN KEY ([NewsSourceId]) REFERENCES [Beholder].[NewsSource] ([Id]),
    CONSTRAINT [FK_Event_RemovalStatus] FOREIGN KEY ([RemovalStatusId]) REFERENCES [Beholder].[RemovalStatus] ([Id])
);

